<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxj.dao.ProductMapper">
  <resultMap id="BaseResultMap" type="com.lxj.pojo.Product">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="subtitle" jdbcType="VARCHAR" property="subtitle" />
    <result column="main_image" jdbcType="VARCHAR" property="mainImage" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="sub_images" jdbcType="LONGVARCHAR" property="subImages" />
    <result column="detail" jdbcType="LONGVARCHAR" property="detail" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, category_id, name, subtitle, main_image, sub_images, detail, price, stock, status,
    create_time, update_time
  </sql>

  <select id="selectList" resultMap="BaseResultMap" >
    SELECT
    <include refid="Base_Column_List"/>
    from store_product
    ORDER BY id asc
  </select>


  <select id="selectByNameAndProductId" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List"/>
    from store_product
    <where>
      <if test="productName != null">
        and name like #{productName}
      </if>
      <if test="productId != null">
        and id = #{productId}
      </if>
    </where>
  </select>

  <select id="selectByNameAndCategoryIds" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List"></include>
    from store_product
    where status = 1
    <if test="productName != null">
      and name like #{productName}
    </if>
    <if test="categoryIdList != null" >
      and category_id in
      <foreach item="item" index="index" open="(" separator="," close=")" collection="categoryIdList">
        #{item}
      </foreach>
    </if>
  </select>


  <select id="selectStockByProductId" resultType="int" parameterType="java.lang.Integer">
    select
    stock
    from store_product
    where id = #{id}
    for update

  </select>
  
  
  
</mapper>