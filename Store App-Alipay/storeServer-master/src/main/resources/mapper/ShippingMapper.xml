<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxj.dao.ShippingMapper">
  <resultMap id="BaseResultMap" type="com.lxj.pojo.Shipping">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="receiver_name" jdbcType="VARCHAR" property="receiverName" />
    <result column="receiver_phone" jdbcType="VARCHAR" property="receiverPhone" />
    <result column="receiver_mobile" jdbcType="VARCHAR" property="receiverMobile" />
    <result column="receiver_province" jdbcType="VARCHAR" property="receiverProvince" />
    <result column="receiver_city" jdbcType="VARCHAR" property="receiverCity" />
    <result column="receiver_district" jdbcType="VARCHAR" property="receiverDistrict" />
    <result column="receiver_address" jdbcType="VARCHAR" property="receiverAddress" />
    <result column="receiver_zip" jdbcType="VARCHAR" property="receiverZip" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_default" jdbcType="BIT" property="isDefault" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, user_id, receiver_name, receiver_phone, receiver_mobile, receiver_province, receiver_city,
    receiver_district, receiver_address, receiver_zip, create_time, update_time, is_default
  </sql>


  <insert id="customInsert" parameterType="com.lxj.pojo.Shipping" useGeneratedKeys="true" keyProperty="id">
    insert into store_shipping (id, user_id, receiver_name,
    receiver_phone, receiver_mobile, receiver_province,
    receiver_city, receiver_district, receiver_address,
    receiver_zip, create_time, update_time, is_default
    )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{receiverName,jdbcType=VARCHAR},
    #{receiverPhone,jdbcType=VARCHAR}, #{receiverMobile,jdbcType=VARCHAR}, #{receiverProvince,jdbcType=VARCHAR},
    #{receiverCity,jdbcType=VARCHAR}, #{receiverDistrict,jdbcType=VARCHAR}, #{receiverAddress,jdbcType=VARCHAR},
    #{receiverZip,jdbcType=VARCHAR}, now(), now(),#{isDefault,jdbcType=BIT}
    )
  </insert>


  <delete id="deleteByShippingIdUserId" parameterType="map">
    DELETE  FROM  store_shipping
    where id = #{shippingId}
    and user_id = #{userId}
  </delete>

  <update id="updateByShipping" parameterType="com.lxj.pojo.Shipping">
    update store_shipping
    <set >
      <if test="receiverName != null" >
        receiver_name = #{receiverName,jdbcType=VARCHAR},
      </if>
      <if test="receiverPhone != null" >
        receiver_phone = #{receiverPhone,jdbcType=VARCHAR},
      </if>
      <if test="receiverMobile != null" >
        receiver_mobile = #{receiverMobile,jdbcType=VARCHAR},
      </if>
      <if test="receiverProvince != null" >
        receiver_province = #{receiverProvince,jdbcType=VARCHAR},
      </if>
      <if test="receiverCity != null" >
        receiver_city = #{receiverCity,jdbcType=VARCHAR},
      </if>
      <if test="receiverDistrict != null" >
        receiver_district = #{receiverDistrict,jdbcType=VARCHAR},
      </if>
      <if test="receiverAddress != null" >
        receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="receiverZip != null" >
        receiver_zip = #{receiverZip,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = now(),
      </if>
      <if test="isDefault != null" >
        is_default = #{isDefault,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
    and user_id = #{userId,jdbcType=INTEGER}
  </update>


  <select id="selectByShippingIdUserId" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List"/>
    from store_shipping
    where id = #{shippingId}
    and user_id = #{userId}
  </select>


  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="map">
    SELECT
    <include refid="Base_Column_List"/>
    from store_shipping
    where user_id = #{userId}
  </select>
  
  
</mapper>